68:	 11 24            eor	d=1	r=1   //полностью обнуляет 1 регистр	
6a:	 1F BE            out	P=63	r=1	//заносит данные из 1 регистра в 63 регистр I/O
6c:	 CF EF            ser	d=28	       // заполняет регистр 28 единичками
6e:	 D8 E0            ldi	d=29	K=8	// записывает в регистр 29 значение 00001000
70:	 DE BF            out	P=62	r=29	 // заносит данные из 29 регистра в 62 регистр I/O
72:	 CD BF            out	P=61	r=28	// заносит данные из 28 регистра в 61 регистр I/O
74:	 0E 94 40 00      call	k=80	        // переносит курсор на 80 строку
78:	 0C 94 52 00      jmp	k=a4	        // переносит курсор на a4
7c:	 0C 94 00 00      jmp	k=0	        // переносит курсор на начало (0)
80:	 56 9A            sbi	P=10	b=6	// устанавливает 6 бит 10 регистра I/O
82:	 51 98            cbi	P=10	b=1	// удаляет 1 бит 10 регистра I/O
84:	 59 9A            sbi	P=11	b=1	// устанавливает 1 бит 11 регистра I/O
86:	 49 99            sbic	P=9	b=1	// проверка, чему равен 1 бит 9 регистра в I/O. Если он равен 0, то пропускает следующую команду
88:	 02 C0            rjmp	k=4	        // прыгает на 4 позиции вниз (8с)
8a:	 5E 9A            sbi	P=11	b=6	// устанавливает 6 бит 11 регистра I/O
8c:	 01 C0            rjmp	k=2	        // прыжок на 90
8e:	 5E 98            cbi	P=11	b=6	// удаляет 6 бит 11 регистра I/O
90:	 22 E6            ldi	d=18	K=62	// записывает в 18 регистр значение 62(16)
92:	 82 EF            ldi	d=24	K=f2	// записывает в 24 регистр значение f2(16)
94:	 90 E2            ldi	d=25	K=20	// записывает в 25 регистр значние 20(16сс)
96:	 21 50            subi	d=18	K=1	// вычитаем из 18 регистра 1
98:	 80 40            sbci	d=24	K=0	// вычитаем из 24 регистра флаг C (когда 18 регистр переполнится)
9a:	 90 40            sbci	d=25	K=0	// вычитаем из 25 регистра аналогично
9c:	 E1 F7            brbc	s=1	k=-8	// проверка флага Z, если 25 регистр становится равным 0, идёт на следующую команду, иначе перемещается на 96
9e:	 00 C0            rjmp	k=0	        // 2 rjmp просто по приколу, они ничего не делают
a0:	 00 C0            rjmp	k=0	
a2:	 F1 CF            rjmp	k=-30	        // замыкание цикла while, переход на строку номер 84 + 2 = 86
a4:	 F8 94            bclr	s=7	        // остальные команды не выполняются
a6:	 FF CF            rjmp	k=-2	
a8:	 7E FF            sbrs	r=23	b=6	
              
